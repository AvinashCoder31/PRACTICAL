#include <stdio.h>

#define MAX_SIZE 5

int circular_queue[MAX_SIZE];
int front = -1, rear = -1;

void enqueue(int data) {
    if ((rear + 1) % MAX_SIZE == front) {
        printf("Circular queue is full\n");
        return;
    }

    if (front == -1) {
        front = 0;
    }

    rear = (rear + 1) % MAX_SIZE;
    circular_queue[rear] = data;
    printf("Enqueued: %d\n", data);
}

int dequeue() {
    if (front == -1) {
        printf("Circular queue is empty\n");
        return -1;
    }

    int data = circular_queue[front];
    if (front == rear) {
        front = rear = -1;
    } else {
        front = (front + 1) % MAX_SIZE;
    }
    printf("Dequeued: %d\n", data);
    return data;
}

void displayCircularQueue() {
    if (front == -1) {
        printf("Circular queue is empty\n");
        return;
    }

    printf("Circular queue elements: ");
    int i = front;
    do {
        printf("%d ", circular_queue[i]);
        i = (i + 1) % MAX_SIZE;
    } while (i != (rear + 1) % MAX_SIZE);
    printf("\n");
}

int main() {
    enqueue(10);
    enqueue(20);
    enqueue(30);

    displayCircularQueue();

    dequeue();
    dequeue();

    displayCircularQueue();

    return 0;
}