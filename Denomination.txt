#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int thousands;
    int fiveHundreds;
    int hundreds;
} DenominationPolicy;

void calculateDenominations(int amount, DenominationPolicy policy) {
    int totalRatio = policy.thousands + policy.fiveHundreds + policy.hundreds;
    int unit = amount / totalRatio;

    if (amount % totalRatio != 0) {
        printf("The amount %d cannot be evenly distributed based on the ratio (%d:%d:%d).\n",
               amount, policy.thousands, policy.fiveHundreds, policy.hundreds);
        return;
    }

    int numThousands = policy.thousands * unit;
    int numFiveHundreds = policy.fiveHundreds * unit;
    int numHundreds = policy.hundreds * unit;

    printf("Denominations:\n");
    printf("₹1000 Notes: %d\n", numThousands);
    printf("₹500 Notes: %d\n", numFiveHundreds);
    printf("₹100 Notes: %d\n", numHundreds);
}

int main() {
    DenominationPolicy bankA = {1, 1, 1};
    DenominationPolicy bankB = {2, 1, 3};
    DenominationPolicy bankC = {3, 2, 5};

    int bankChoice, amount;

    printf("Select Bank Policy:\n");
    printf("1. Bank A (Ratio: 1:1:1)\n");
    printf("2. Bank B (Ratio: 2:1:3)\n");
    printf("3. Bank C (Ratio: 3:2:5)\n");
    printf("Enter your choice: ");
    scanf("%d", &bankChoice);

    printf("Enter the amount to withdraw: ");
    scanf("%d", &amount);

    switch (bankChoice) {
        case 1:
            calculateDenominations(amount, bankA);
            break;
        case 2:
            calculateDenominations(amount, bankB);
            break;
        case 3:
            calculateDenominations(amount, bankC);
            break;
        default:
            printf("Invalid bank choice.\n");
    }

    return 0;
}
