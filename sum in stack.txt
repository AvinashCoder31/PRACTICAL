#include <stdio.h>
#include <stdlib.h>

// Define the structure for a stack node
typedef struct StackNode {
    int data;
    struct StackNode* next;
} StackNode;

// Function to create a new stack node
StackNode* createNode(int data) {
    StackNode* newNode = (StackNode*)malloc(sizeof(StackNode));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Function to push an element onto the stack
void push(StackNode** top, int data) {
    StackNode* newNode = createNode(data);
    newNode->next = *top;
    *top = newNode;
}

// Function to pop an element from the stack
int pop(StackNode** top) {
    if (*top == NULL) {
        printf("Stack underflow\n");
        return -1;
    }
    StackNode* temp = *top;
    int popped = temp->data;
    *top = (*top)->next;
    free(temp);
    return popped;
}

// Function to calculate the sum of elements in the stack
int sumOfStack(StackNode* top) {
    int sum = 0;
    StackNode* current = top;
    while (current != NULL) {
        sum += current->data;
        current = current->next;
    }
    return sum;
}

// Function to display the stack
void displayStack(StackNode* top) {
    StackNode* current = top;
    printf("Stack elements: ");
    while (current != NULL) {
        printf("%d ", current->data);
        current = current->next;
    }
    printf("\n");
}

int main() {
    StackNode* stack = NULL;
    int n, data;

    printf("Enter the number of elements to push onto the stack: ");
    scanf("%d", &n);

    printf("Enter the elements:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &data);
        push(&stack, data);
    }

    displayStack(stack);

    int sum = sumOfStack(stack);
    printf("Sum of elements in the stack: %d\n", sum);

    return 0;
}
